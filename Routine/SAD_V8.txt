.text
vbsme:  	li		$v0, 0					# 0 Set v0 = 0
			li		$v1, 0					# 4 Set v1 = 0
			lui		$s7, 0x7fff				# 8	Set SAD to Largest Possible
			ori		$s7, $s7, 0xffff		# 12
			lw		$s0,  0($a0)			# 16 Frame Rows
			lw		$s1,  4($a0)			# 20 Frame Cols
			lw		$s2,  8($a0)			# 24 Window Rows
			lw		$s3, 12($a0)			# 28 Window Cols
			addi	$a1, $0, 16				# 32
			mul		$a2, $s0, $s1,			# 36
			sll		$a2, $a2, 2				# 40
			add		$a2, $a1, $a2			# 44
			sub		$s4, $s1, $s3			# 80 Max Frame Columns
			sub		$s5, $s0, $s2			# 84 Max Frame Rows
			addi	$t9, $0, 0				# 88 Current Row
			addi	$t8, $0, 0				# 92 Current Column	
			addi	$t0, $a1, 0				# 96 Current Frame Cell
			addi	$s0, $a1,  0			# 112 Current Frame-Window Start
			sll		$s6, $s3, 2				# 256 Move Frame-Window To Begining of Next Row
SADLoop:	li		$t5, 0					# 116 Reset Window SAD
			addi	$t1, $a2, 0				# 120 Reset Window Address
#COMPUTE SAD OF ENTIRE WINDOW	
			lw		$t3, 0($t1)			    # L4B LOAD WINDOW ROW
			lw		$t2, 0($t0)			    # L4B LOAD FRAME ROW
			lw		$t6, 16($t1)			# L4B
			lw		$t4, 256($t0)			# L4B
			add 	$t7, $t2, $t3			# AD4B
			add 	$t5, $t5, $t7			#
			add 	$t7, $t4, $t6			# AD4B
			add 	$t5, $t5, $t7			#
			lw		$t3, 32($t1)			# L4B
			lw		$t2, 512($t0)			# L4B	
			lw		$t6, 48($t1)			# L4B
			lw		$t4, 768($t0)			# L4B
			add 	$t7, $t2, $t3			# AD4B
			add 	$t5, $t5, $t7			#
			add 	$t7, $t4, $t6			# AD4B
			add 	$t5, $t5, $t7			#
CheckSAD:	slt		$t2, $s7, $t5			# 200 Chcek if Current Window SAD < Min SAD, Update
			bne		$t2, $0, CheckExit		# 204
			addi	$s7, $t5, 0				# 208 Set New Min SAD
			addi	$v0, $t9, 0				# 212 Set New Min SAD Row
			addi	$v1, $t8, 0				# 216 Set New Min SAD Col
CheckExit:	bne		$t8, $s4, Move			# 220 Check if at Last (Possible) Column
			bne		$t9, $s5, Move			# 224 Check if at Last (Possible) Row
			#jr		$ra						# 228
			j		end	
Move:		beq		$t8, $s4, MoveNextR		# 232 Check if at Last (Possible) Column
MoveRight:	addi	$t8, $t8, 1				# 236 Move Next Column Index
			addi	$s0, $s0, 4				# 240 Move Frame-Window Start
			addi	$t0, $s0, 0				# 240
			j 		SADLoop					# 244
MoveNextR:  addi	$t9, $t9, 1				# 248 Move Row +1
			addi	$t8, $0,  0				# 252 Move Col 0
			add		$s0, $s0, $s6			# 260
			addi	$t0, $s0, 0				# 264
			j		SADLoop					# 268 
end:		j		endLoop					# 272
endLoop:	j		end						# 276